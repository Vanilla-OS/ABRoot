abroot:
  use: "abroot"
  long: "ABRoot provides full immutability and atomicity by performing transactions
    between 2 root partitions (A<->B)"
  short: "ABRoot provides full immutability and atomicity by performing transactions
    between 2 root partitions (A<->B)"
  verboseFlag: "show more detailed output"

kargs:
  use: "kargs"
  long: "Manage kernel parameters."
  short: "Manage kernel parameters."
  rootRequired: "You must be root to run this command."
  notChanged: No changes were made to kernel parameters.
  applyFailed: "Apply command failed: %s\n"
rollback:
  use: "rollback"
  long: "Executes a system rollback, discarding changes made to the present root."
  short: "Return the system to a previous state."
  rootRequired: "You must be root to run this command."
  rollbackFailed: "Rollback failed: %s\n"
  rollbackSuccess: Rollback completed successfully.
  rollbackUnnecessary: Rollback is not necessary, current root is already the present
    one.
  canRollback: It is possible to rollback to the previous root.
  cannotRollback: It is not possible to rollback to the previous root.
pkg:
  long: Install and manage packages.
  rootRequired: You must be root to run this command.
  noPackageNameProvided: You must provide at least one package name for this operation.
  applyFailed: "Apply command failed: %s\n"
  addedMsg: "Package(s) %s added.\n"
  removedMsg: "Package(s) %s removed.\n"
  listMsg: "Added packages:\n%s\nRemoved packages:\n%s\n"
  use: pkg
  short: Manage packages
  dryRunFlag: perform a dry run of the operation
  agreementDeclined: You declined the agreement. The feature will stay disabled until
    you agree to it.
  agreementMsg: "To utilize ABRoot's abroot pkg command, explicit user agreement is
    required. This command facilitates package installations but introduces non-deterministic
    elements, impacting system trustworthiness. By consenting, you acknowledge and
    accept these implications, confirming your awareness of the command's potential
    impact on system behavior. [y/N]: "
  agreementSignFailed: "Failed to sign the agreement: %s\n"
  forceEnableUserAgreementFlag: force enable user agreement, for embedded systems
status:
  long: Display the current ABRoot status.
  short: Display status
  jsonFlag: Show output in JSON format
  dumpFlag: Dump the ABRoot status to an archive
  rootRequired: You must be root to run this command.
  infoMsg: "ABRoot Partitions:\n  - Present: %s â—„\n  - Future: %s\n\nLoaded configuration:
    %s\n\nPC Specs:\n  - CPU: %s\n  - GPU:%s\n  - Memory: %s\n\nABImage:\n  - Digest:
    %s\n  - Timestamp: %s\n  - Image: %s\n\nKernel Arguments: %s\n\nPackages:\n  -
    Added: %s\n  - Removed: %s\n  - Unstaged: %s%s\n"
  unstagedFoundMsg: "\n\t\tThere are %d unstaged packages. Please run 'abroot pkg
    apply' to apply them."
  dumpMsg: "Dumped ABRoot status to %s\n"
  use: status
  infoMsgAgreementStatus: "\nPackage agreement: %t"
upgrade:
  use: upgrade
  long: Update the boot partition for maintenance purposes (for advanced users only)
  short: Update the boot partition
  forceFlag: force update the boot partition without asking for confirmation
  rootRequired: You must be root to run this command.
  noUpdateAvailable: No update is available for your system.
  checkOnlyFlag: check for updates but do not apply them
  removed: Removed
  downgraded: Downgraded
  packageUpdateAvailable: There are %d package updates.
  systemUpdateAvailable: There is an update for your system.
  upgraded: Upgraded
  added: Added
  checkingPackageUpdate: Checking for package updates...
  checkingSystemUpdate: Checking for system updates...
  dryRunFlag: perform a dry run of the operation
  dryRunSuccess: Dry run completed successfully.
  success: Upgrade completed successfully.
updateInitramfs:
  short: Update the initramfs
  updateFailed: "Failed to update initramfs of future root.\n"
  rootRequired: You must be root to run this command.
  updateSuccess: Updated initramfs of future root.
  long: Update the initramfs of the future root.
  use: update-initramfs
