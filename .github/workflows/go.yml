name: Go

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/vanilla-os/pico:main

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod

    - name: Install Build Dependencies
      run: |
          dpkg --add-architecture arm64
          apt-get update
          apt-get install -y libbtrfs-dev libdevmapper-dev libgpgme-dev libdpkg-dev gcc patch pkgconf libdevmapper-dev:arm64 libdpkg-dev:arm64 gcc-aarch64-linux-gnu

    - name: Run Tests
      run: go test -v ./tests/...

    - name: Build
      run: |
          go build -o abrootv2 -ldflags="-X 'main.Version=${{ github.sha }}'"
          tar -czvf abrootv2-amd64.tar.gz abrootv2
          apt-get install -y libgpgme-dev:arm64
          GOARCH=arm64 CGO_ENABLED=1 CC=aarch64-linux-gnu-gcc PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig go build -o abrootv2 -ldflags="-X 'main.Version=${{ github.sha }}'"
          tar -czvf abrootv2-arm64.tar.gz abrootv2
          tar -czvf abroot-man.tar.gz man/man1/abroot.1

    - name: Check for Missing Strings
      uses: vanilla-os/missing-strings-golang-action@v0.1.0

    - name: Calculate and Save Checksums
      run: |
        sha256sum abrootv2*.tar.gz >> checksums.txt
        sha256sum abroot-man.tar.gz >> checksums.txt

    - uses: actions/upload-artifact@v4
      with:
        name: abrootv2
        path: |
          abrootv2*.tar.gz
          abroot-man.tar.gz
          checksums.txt

    - uses: softprops/action-gh-release@v2
      if: github.repository == 'vanilla-os/ABRoot' && github.ref == 'refs/heads/main'
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        tag_name: "continuous"
        prerelease: true
        name: "Continuous Build"
        files: |
          abrootv2*.tar.gz
          abroot-man.tar.gz
          checksums.txt
